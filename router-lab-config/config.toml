[server]
# SSH Hostname to reach the server.
#
# Make sure that the SSH configuration allows connecting to that server
# without any passowrd.
ssh_name = "moonshine"

# Filename for the netplan configuration file, to configure ExaBGP interfaces.
#
# **Warning** Make sure that regular users can write this file!
netplan_config_filename = "/etc/netplan/51-lab-data-plane.yaml"

# Interface name which is used by ExaBGP
exabgp_iface = "enp132s0f0"

# Filename for the ExaBGP runner script on the server
exabgp_runner_filename = "/local/home/roschmi/.router-lab_run_exabgp.py"

# Filename for the ExaBGP configuration on the server.
exabgp_config_filename = "/local/home/roschmi/.router-lab_exabgp_conf.ini"

# Filename of the textfile to interact with the ExaBGP runner script on the 
# server
exabgp_runner_control_filename = "/local/home/roschmi/.router-lab_exabgp_control"

# Filename for the configuration file of the prober on the server.
prober_config_filename = "/local/home/roschmi/.router-lab_prober.toml"

# Interface name used to generate traffic on (using the prober).
prober_iface = "enp132s0f0"

# Allows to disable running a collector.
disable_collector = true

# The port on the tofino to which the delayer interface is connected
delayer_tofino_base_port = 52

# Offset of delay values to account for the extra time of passing through the delayer loop
delayer_loop_offset = -55

# Select whether to start an iperf client from the router-lab (false) or whether there is one running already (true)
iperf_client_running = true

# The IP where the iperf client will be started to generate traffic, e.g. with:
# iperf3 --bind 192.33.88.222 --udp --bitrate 1G --time 0 --client 192.33.88.221
# Make sure that the there is an interface configured on the connected server that matches this IP.
iperf_client_ip = "192.33.88.222"

# The port on the tofino to which the iperf client interface is connected
iperf_client_tofino_port = 138

# The IP where the iperf server is running, e.g. with:
# iperf3 --server --bind 192.33.88.221 --daemon
iperf_server_ip = "192.33.88.221"

# The port on the tofino to which the iperf server interface is connected
iperf_server_tofino_port = 139

# The fake iperf source IP address used to replicate traffic to the routers, used to filter out traffic that returns to the Tofino
iperf_filter_src_ip = "192.33.88.220"

# Set to true to enable the full traffic monitoring, can be true/false
traffic_monitor_enable = true

# Command on the server to execute for packet capturing
traffic_monitor_cmd = "tcpdump_pfring"

# Path on the server where to place the recorded pcap files
traffic_monitor_pcap_path = "/local/home/roschmi/monitor"

# Path on the server where to keep log output from tcpdump
traffic_monitor_log = "/local/home/roschmi/monitor.log"

# The server interface on which the full traffic will be monitored, should be connected to traffic_monitor_tofino_port
traffic_monitor_iface = "enp132s0f1"

# The port on the tofino to which the full traffic should be cloned, should be connected to traffic_monitor_iface
traffic_monitor_tofino_port = 44

[tofino]
# SSH Hostname to reach the tofino.
#
# Make sure that the SSH configuration allows connecting to that server
# without any passowrd.
ssh_name = "lab-tofino"

# Filename for storing the controller script.
controller_filename = "/home/nsg/router-lab/controller.py"

# Path towards the port setup file
ports_setup_filename = "/home/nsg/roschmi/ports_setup.cmd"

# Path towards the file used to disable or enable specific ports
ucli_script_filename = "/tmp/router-lab-ucli-script.cmd"

# Path towards the Barefoot SDE. This is to be sourced before executing `run_bfshell.sh`
bf_sde_path = "/data/set_sde_9.8.0.sh"

# Full path for the Barefoot SDE shell.
bf_sde_shell = "/home/nsg/bf-sde-9.8.0/run_bfshell.sh"

[addresses]
# IP Address range used for all internal networks and all links, both
# connecting two internal routers and connecting an internal and an external 
# router.
internal_ip_range = "1.0.0.0/8"

# IP Address range for networks of external routers.
external_ip_range = "2.0.0.0/8"

# IP Address range for announced prefixes.
prefix_ip_range = "3.0.0.0/8"

# Prefix length for networks that are assigned to internal routers.
local_prefix_len = 24

# Prefix length of links (connecting an internal router with either an
# external or another internal router).
link_prefix_len = 30

# Prefix length for networks that are assigned to external routers.
external_prefix_len = 24

# Prefix length of announced prefixes.
prefix_len = 24
